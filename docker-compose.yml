services:
  postgres:
    image: postgres:17
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped
    networks:
      - familytree

  nginx:
    image: nginx:alpine
    labels:
      - traefik.enable=true
      - traefik.http.routers.familytree.tls=true
      - traefik.http.routers.familytree.tls.certresolver=le
      - traefik.http.routers.familytree.tls.domains[0].main=${DOMAIN}
      - traefik.http.routers.familytree.rule=Host(`${DOMAIN}`)
      - traefik.http.routers.familytree.service=familytree
      - traefik.http.services.familytree.loadbalancer.server.port=80
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - images:/app/public/images:ro
    depends_on:
      - app
    restart: unless-stopped
    networks:
      - mynetwork
      - familytree
    healthcheck:
      test: [ "CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://127.0.0.1:80/api/health" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  app:
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env
    volumes:
      # Mount images directory as volume (update path as needed)
      - images:/app/public/images
      # Uncomment below for writable uploads directory
      # - ./uploads:/app/uploads
    restart: unless-stopped
    networks:
      - familytree
    depends_on:
      postgres:
        condition: service_healthy
    # Remove external exposure since nginx will handle it
    expose:
      - "3000"

networks:
  familytree:
  mynetwork:
    external: true

volumes:
  images:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: ./images
  postgres_data:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: ./postgres_data
